TestCase subclass: #ColeccionLlamadasTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!ColeccionLlamadasTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 16:16'!test02AgregarLlamadaConDuracion0LevantaError	|llamadas llamada|		"Arrange"	llamadas := ColeccionLlamadas new.	llamada := LlamadaNacional conDuracion: 0 ALas: 4.		"Act and Assert"	self should: [ llamadas registrar: llamada ]  raise: DuracionInvalidaError.! !!ColeccionLlamadasTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 16:08'!test01ConsultarMasCostosaCuandoNoSeHicieronLlamadasLevantaError	|llamadas|		"Arrange"	llamadas := ColeccionLlamadas new.		"Act and Assert"		self should: [ llamadas masCostosa ] raise: ColeccionLlamadasVaciaError.! !TestCase subclass: #DescuentoPorDuracionTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!DescuentoPorDuracionTest methodsFor: 'tests' stamp: 'tomi 5/26/2022 12:20'!test01SeAplicaDescuentoDe10Porciento	|monto descuento|		"Arrange"	descuento := DescuentoPorDuracion del: 0.10.	monto := 100.		"Act and assert"	self assert: (descuento aplicarA: monto) equals: 10.! !!DescuentoPorDuracionTest methodsFor: 'tests' stamp: 'tomi 5/26/2022 12:25'!test02SeAplicanDescuentosAMismoMonto	|monto montoEsperado descuento1 descuento2|		"Arrange"	descuento1 := DescuentoPorDuracion del: 0.05.	descuento2 := DescuentoPorDuracion del: 0.20.	monto := 100.	montoEsperado := 5 + 20.		"Act and assert"	self assert: ((descuento1 aplicarA: monto) + (descuento2 aplicarA: monto)) equals: montoEsperado.! !TestCase subclass: #HorarioTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!HorarioTest methodsFor: 'tests' stamp: 'tomi 5/26/2022 12:33'!test01HorariosConHorasDistintasAsignanDistintasTarifas	|horarioHabil horarioNoHabil montoEsperado|	"Arrange"	horarioHabil := Horario conHora: 10.	horarioNoHabil := Horario conHora: 22.	montoEsperado := 0.1 + 0.2.		"Act and Assert"	self assert: ((horarioHabil asignarTarifa) + (horarioNoHabil asignarTarifa)) equals: montoEsperado.		"La tarifa en horario habil y no habil es de 0,2 y 0,1 $ respectivamente"	! !TestCase subclass: #LlamadaTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 20:48'!test03SeConsultaCostoLlamadaNacional	|llamada montoEsperadoAPagar|		"Arrange"	llamada := LlamadaNacional conDuracion: 20 ALas: 9.	montoEsperadoAPagar := 4.		"Act and assert"	self assert: (llamada coste) equals: montoEsperadoAPagar.	"El precio por min en horario habil es de 0,2 $"! !!LlamadaTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 21:02'!test05seRealizanLlamadasNacionalesConMismaDuracionEnDistintosHorarios	| llamada1 llamada2 montoEsperadoAPagar |	"Arrange"	montoEsperadoAPagar := 1.5 + 3.	llamada1 := LlamadaNacional conDuracion: 15 ALas: 3.	llamada2 := LlamadaNacional conDuracion: 15 ALas: 11.		"Act and Assert"	self assert: ( llamada1 coste + llamada2 coste ) equals: montoEsperadoAPagar	"El precio por min en horario habil y no habil es de 0,2 y 0,1 $ respectivamente"! !!LlamadaTest methodsFor: 'tests' stamp: 'tomi 5/26/2022 12:10'!test06seRealizanLlamadasNacionalesEInternacionalesConDuracionMayorOIgualA30YSeAplicaDescuento	| llamadaNac llamadaInter montoEsperadoAPagar|	"Arrange"	montoEsperadoAPagar := 7.2 + 54.	llamadaNac := LlamadaNacional conDuracion: 40 ALas: 13.	llamadaInter := LlamadaInternacional conDuracion: 30 ALas: 13 Hacia: 'Uruguay' YTarifaPorMinuto: 2.		"Act and Assert"	self assert: ( llamadaNac coste + llamadaInter coste ) equals: montoEsperadoAPagar! !!LlamadaTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 20:49'!test04SeConsultaCostoLlamadaInteracional	|llamada montoEsperadoAPagar|		"Arrange"	llamada := LlamadaInternacional conDuracion: 13 ALas: 5 Hacia: 'Japon' YTarifaPorMinuto: 6.	montoEsperadoAPagar := 78.		"Act and assert"	self assert: (llamada coste) equals: montoEsperadoAPagar.! !!LlamadaTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 18:09'!test02SeConsultaDescripcionLlamadaInternacional	|llamada|		"Arrange"	llamada := LlamadaInternacional conDuracion: 31 ALas: 13 Hacia: 'Qatar' YTarifaPorMinuto: 5.		"Act and assert"	self assert: llamada descripcion equals: 'La llamada se hizo a Qatar a las 13 hs durando 31 minutos'! !!LlamadaTest methodsFor: 'tests' stamp: 'tomi 5/25/2022 18:08'!test01SeConsultaDescripcionLlamadaNacional	|llamada|		"Arrange"	llamada := LlamadaNacional conDuracion: 21 ALas: 13.		"Act and assert"	self assert: llamada descripcion equals: 'La llamada se hizo a las 13 hs durando 21 minutos'! !TestCase subclass: #TeleAlgoTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!TeleAlgoTest methodsFor: 'tests' stamp: 'tomi 4/24/2022 16:36'!test8SeRegistranLlamadasNacionalesEnHoraNoHabilYseBuscaMasCostosaYDevuelveDescripcionDeLaMisma	| teleAlgo abonoMensual |	"Arrange"	abonoMensual := 150.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		"Act"	teleAlgo registrarLlamadaNacionalConDuracion: 15 HechaEnElHorario: 1.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 23.		"Assert"	self		assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )		equals:		'La llamada mas costosa: La llamada se hizo a las 1 hs durando 15 minutos'! !!TeleAlgoTest methodsFor: 'tests' stamp: 'tomi 4/25/2022 19:59'!test12seRegistranLlamadasConMismaDuracionEnDistintosHorarios	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 103.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act"	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 2.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 10.		"Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario no habil es de 0,1 $"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'tomi 4/24/2022 17:18'!test9seRegistranLlamadasInternacionalesADistintosPaises		| teleAlgo abonoMensual montoEsperadoAPagar|		"Arrange"	abonoMensual := 912.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	montoEsperadoAPagar := abonoMensual + 60 + 83.7 + 108.		"Act"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 3.	teleAlgo registrarLlamadaInternacionalCon: 20 HechaEnElHorario: 18 Hacia: 'Espania'.	teleAlgo registrarLlamadaInternacionalCon: 31 HechaEnElHorario: 2 Hacia: 'Australia'.	teleAlgo registrarLlamadaInternacionalCon: 40 HechaEnElHorario: 13 Hacia: 'Ingraterra'.		"Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'tomi 4/25/2022 18:13'!test10seConsultaLlamadaMasCostosaCuandoNoSeRegistraronLlamadas	| teleAlgo abonoMensual |		"Arrange"	abonoMensual := 200.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	self		assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )		equals:		'No hay llamadas registradas'		! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test5SeRegistraUnaLlamadaInternacionalYOtraNacionalEnHorarioHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	abonoMensual := 100.	montoEsperadoAPagar := abonoMensual + 20 + 2.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 2.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Paraguay'.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test4SeRegistraUnaLlamadaInternacionalYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 110.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Uruguay'.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test7SeRegistraUnaLlamadaQueAlDurarMasDe30MinutosSeLeAplicaUnDescuentoDel10PorCiento	| teleAlgo abonoMensual montoEsperadoAPagar |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	montoEsperadoAPagar := 103.6.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 40 HechaEnElHorario: 24.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'tomi 4/25/2022 19:49'!test11seRegistranLlamadasAlComienzoYFinalDeLasHorasHabilesYSeFacturan	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	abonoMensual := 120.	montoEsperadoAPagar := abonoMensual + 0.4 + 0.8.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	teleAlgo registrarLlamadaNacionalConDuracion: 2 HechaEnElHorario: 20.	teleAlgo registrarLlamadaNacionalConDuracion: 4 HechaEnElHorario: 8.	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario habil y no habil es de 0,2 0,1$ respectivamente"	"El horario habil es de 8 a 20"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'tomi 4/25/2022 20:19'!test13seIntentaRegistrarLlamadasConDuracion0YNoSonRegistradas	| teleAlgo abonoMensual |		"Arrange"	abonoMensual := 111.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.		teleAlgo registrarLlamadaInternacionalCon: 0 HechaEnElHorario: 13 Hacia: 'Brasil'.	teleAlgo registrarLlamadaNacionalConDuracion: 0 HechaEnElHorario: 2.		"Act and Assert"	self assert: (teleAlgo llamadasEfectuadas) equals: 0.! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test3SeRegistraUnaLlamadaNacionallYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 101.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario no habil es de 0,1 $"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/3/2022 19:43'!test6SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma	| teleAlgo abonoMensual |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	teleAlgo registrarLlamadaInternacionalCon: 20 HechaEnElHorario: 24 Hacia: 'Paraguay'.	self		assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )		equals:		'La llamada mas costosa: La llamada se hizo a Paraguay a las 24 hs durando 20 minutos'! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test1SeFacturanLasLlamadasDeUnUsuarioQueNoRealizoLlamadasDuranteElMesYPagaSoloElAbonoMensualFijo	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 100.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test2SeRegistraUnaLlamadaNacionalEnHoraHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 102. "El abono mas el costo de todas las llamadas"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	"El horario es un numero natural que va desde la hora 1 a la hora 24"	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario habil es de 0,2 $"	"El horario habil es de 8 a 20"! !